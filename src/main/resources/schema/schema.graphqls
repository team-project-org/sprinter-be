scalar DateTime

schema {
    query: Query
    mutation: Mutation
}

type Query {
    getMember(member_id: ID!): Member!
    getAllMemberList: [Member!]!
    getQueryUserAuth: Boolean!
    getQueryAdminAuth: Boolean!
    getQueryAnonymousAuth: Boolean!
    getQueryAnonymous2Auth: Boolean!
    getAllPostList: PostList!
}

type PostList {
    total_count: Int!
    item_list: [Post!]!
}

type Post {
    title: String!
    start_date: DateTime!
    end_date: DateTime!
    owner: Member!
}

type Member {
    """ 회원 PK """
    id: ID!
    """ 회원 고유 이름 """
    username: String!
    """ 프로필 이름 """
    profile_name: String!
    """ 회원 권한 """
    role_type_list: [RoleType!]!
}

type Mutation {
    createMember(input: SignupInput!): ID!
    createPost(input: CreatePostInput!): ID!
    updateProfileName(input: UpdateProfileNameInput!): ID!
}

input SignupInput {
    username: String!
    password: String!
    profile_name: String!
}

input UpdateProfileNameInput {
    id: ID!
    new_profile_name: String!
    auditor: String!
}

input LoginInput {
    username: String!
    password: String!
}

input CreatePostInput {
    title: String!
    owner_username: String!
    start_date: DateTime!
    end_date: DateTime!
}

enum RoleType {
    ROLE_USER, ROLE_ADMIN
}
