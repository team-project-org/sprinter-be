name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main
env:
  APP_NAME: aaa
  S3_BUCKET_NAME: sprinter-code-deploy # S3의 버킷명
  CODE_DEPLOY_APPLICATION_NAME: sprinter # CodeDeploy생성시 어플리케이션명
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: code-deploy-springboot-application-deployment-group # CodeDeploy를 생성후 어플리케이션 내부의 배포그룹명

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS IAM의 CODE_DEPLOY ACCESS KEY ID
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS IAM의 CODE_DEPLOY SECRET ACCESS KEY
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://${{ env.S3_BUCKET_NAME }}/${{ env.APP_NAME }}.zip \
            --source .

      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=${{ env.GITHUB_SHA }}.zip,bundleType=zip